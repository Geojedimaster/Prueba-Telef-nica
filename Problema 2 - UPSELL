import pandas as pd
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder

# Leer el archivo CSV con la codificación 'latin-1'
data = pd.read_csv('C:/Users/ECP/PycharmProjects/Upsell/UPSELL_PRUEBA_TECNICA.csv', encoding='latin-1')

# Obtener las columnas no numéricas
non_numeric_columns = data.select_dtypes(exclude=['number']).columns

# Reemplazar los valores faltantes con la moda en las columnas no numéricas
imputer = SimpleImputer(strategy='most_frequent')
data[non_numeric_columns] = imputer.fit_transform(data[non_numeric_columns])

# Separar las características (X) y la variable objetivo (y)
X = data.drop('TARGET', axis=1)
y = data['TARGET']

# Codificar las variables categóricas utilizando la codificación one-hot
encoder = OneHotEncoder()
X_encoded = encoder.fit_transform(X)

# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)

# Crear el modelo RandomForestClassifier
model = RandomForestClassifier()

# Entrenar el modelo
model.fit(X_train, y_train)

# Hacer predicciones en el conjunto de prueba
y_pred = model.predict(X_test)

# Calcular la precisión del modelo
accuracy = accuracy_score(y_test, y_pred)
print("Precisión del modelo: {:.2f}%".format(accuracy * 100))

# Crear un gráfico de barras de los resultados
labels = ['No Upsell', 'Upsell']
counts = [len(y_test[y_test == 0]), len(y_test[y_test == 1])]

plt.bar(labels, counts)
plt.xlabel('Resultado')
plt.ylabel('Cantidad')
plt.title('Resultados de la predicción')
plt.show()
